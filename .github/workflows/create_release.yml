on: pull_request
  #push:
  #  branches:
  #    - master

name: Create Release

jobs:
  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: '^1.13.1' 
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          sudo apt-get install rpm ruby ruby-dev rubygems build-essential
          sudo gem install --no-document fpm
          sudo wget -O /usr/local/bin/yq https://github.com/mikefarah/yq/releases/download/3.3.0/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq
      - name: Check exporters have been modified
        id: check
        run : |
          export GOPATH=$(go env GOPATH)
          
          git fetch -at origin --unshallow
          source ./release.sh

          getExporterPath
          loadVariables
          packageLinux 
          echo "::set-output name=NAME::${NAME}"
          echo "::set-output name=EXPORTER_HEAD::${EXPORTER_HEAD}"
          echo "::set-output name=EXPORTER_REPO_URL::${EXPORTER_REPO_URL}"
          echo "::set-output name=VERSION::${VERSION}"
          echo "::set-output name=EXPORTER_CHANGELOG::${EXPORTER_CHANGELOG}"
          echo "::set-output name=CREATE_RELEASE::${CREATE_RELEASE}"
          echo "::set-output name=EXPORTER_PATH::${EXPORTER_PATH}"

          echo Creating a release: ${CREATE_RELEASE} having tag ${VERSION} and remote HEAD ${EXPORTER_HEAD}
          echo Changelog: ${EXPORTER_CHANGELOG}
          
      - name: Create Release
        if: ${{ steps.check.outputs.CREATE_RELEASE }} == 'true'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.check.outputs.NAME }}-${{ steps.check.outputs.VERSION }}
          release_name: Release ${{ steps.check.outputs.NAME }} ${{ steps.check.outputs.VERSION }}
          body: |
            Changes in ${{ steps.check.outputs.NAME }} ${{ steps.check.outputs.VERSION }}
              - Commit or Tag: ${{ steps.check.outputs.EXPORTER_HEAD }}  
              - ${{ steps.check.outputs.EXPORTER_CHANGELOG }}  
          draft: true
          prerelease: false

###
###   LINUX PACKAGING
###

  push_linux_artifacts:
    needs: [create_release]
    name: Push Linux Artifacts
    runs-on: ubuntu-latest
    if: ${{ needs.create_release.outputs.CREATE_RELEASE }} == 'true'
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: '^1.13.1' 
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          sudo apt-get install rpm ruby ruby-dev rubygems build-essential
          sudo gem install --no-document fpm
          sudo wget -O /usr/local/bin/yq https://github.com/mikefarah/yq/releases/download/3.3.0/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq
      - name: package linux
        run : |
          export GOPATH=$(go env GOPATH)
          export EXPORTER_PATH=${{ needs.create_release.outputs.EXPORTER_PATH }}
          echo EXPORTER_PATH $EXPORTER_PATH
          echo ${{ needs.create_release.outputs }}
          source ./release.sh
          loadVariables
          packageLinux

###
###   UPLOAD ASSETS 
###

      - name: Upload Release Asset deb
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }} 
          asset_path: ${{ needs.create_release.outputs.EXPORTER_PATH }}/target/packages/deb/${{ needs.create_release.outputs.NAME }}_${{ needs.create_release.outputs.VERSION }}-1_amd64.deb
          asset_name: ${{ needs.create_release.outputs.NAME }}_${{ needs.create_release.outputs.VERSION }}-1_amd64.deb
          asset_content_type: deb package
      - name: Upload Release Asset tar
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ needs.create_release.outputs.EXPORTER_PATH }}/target/packages/tar/${{ needs.create_release.outputs.NAME }}_linux_${{ needs.create_release.outputs.VERSION }}_amd64.tar.gz
          asset_name: ${{ needs.create_release.outputs.NAME }}_linux_${{ needs.create_release.outputs.VERSION }}_amd64.tar.gz
          asset_content_type: tarball
      - name: Upload Release Asset RPM
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: ${{ needs.create_release.outputs.EXPORTER_PATH }}/target/packages/rpm/${{ needs.create_release.outputs.NAME }}-${{ needs.create_release.outputs.VERSION }}-1.x86_64.rmp
          asset_name: ${{ needs.create_release.outputs.EXPORTER_PATH }}/target/packages/rpm/${{ needs.create_release.outputs.NAME }}-${{ needs.create_release.outputs.VERSION }}-1.x86_64.rmp
          asset_content_type: rpm package

  push_Windows_artifacts:
    needs: [create_release]
    name: Push Linux Artifacts
    runs-on: ubuntu-latest
    if: ${{ needs.create_release.outputs.CREATE_RELEASE }} == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install yq
        run: |
          touch a.msi

  push_Windows_artifacts2:
    needs: [create_release]
    name: Push Linux Artifacts
    runs-on: ubuntu-latest
    if: ${{ needs.create_release.outputs.CREATE_RELEASE }} == 'false'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install yq
        run: |
          echo "IF you see this there is something wrong"