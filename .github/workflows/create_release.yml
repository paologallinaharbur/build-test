on: 
#pull_request
  push:
    branches:
      - master

name: Create Release

jobs:
  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: '^1.13.1' 
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          sudo apt-get install rpm ruby ruby-dev rubygems build-essential
          sudo gem install --no-document fpm
          sudo wget -O /usr/local/bin/yq https://github.com/mikefarah/yq/releases/download/3.3.0/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq
      - name: Check exporters have been modified
        id: check
        run : |
          export GOPATH=$(go env GOPATH)
          
          git fetch -at origin --unshallow
          source ./release.sh

          getExporterPath
          loadVariables
          packageLinux 
          setStepOutput

          echo Creating a release: ${CREATE_RELEASE} having tag ${VERSION} and remote HEAD ${EXPORTER_HEAD}
          echo Changelog: ${EXPORTER_CHANGELOG}
          
      - name: Create Release
        id: create_release
        if: ${{ steps.check.outputs.CREATE_RELEASE }} == 'TRUE'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.check.outputs.NAME }}-${{ steps.check.outputs.VERSION }}
          release_name: Release ${{ steps.check.outputs.NAME }} ${{ steps.check.outputs.VERSION }}
          body: |
            Changes in ${{ steps.check.outputs.NAME }} ${{ steps.check.outputs.VERSION }}
              - Exporter repository URL: ${{ steps.check.outputs.EXPORTER_REPO_URL }}
              - Commit or Tag of the exporter built: ${{ steps.check.outputs.EXPORTER_HEAD }}  
              - CHANGELOG: ${{ steps.check.outputs.EXPORTER_CHANGELOG }}  
          draft: false
          prerelease: false
    outputs:
      CREATE_RELEASE: ${{ steps.check.outputs.CREATE_RELEASE }}
      EXPORTER_PATH: ${{ steps.check.outputs.EXPORTER_PATH }}
      UPLOAD_URL: ${{ steps.create_release.outputs.upload_url }}

###
###   LINUX PACKAGING
###

  push_linux_artifacts:
    needs: [create_release]
    name: Push Linux Artifacts
    runs-on: ubuntu-latest
    if: ${{ needs.create_release.outputs.CREATE_RELEASE == 'TRUE'}}
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: '^1.13.1' 
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          sudo apt-get install rpm ruby ruby-dev rubygems build-essential
          sudo gem install --no-document fpm
          sudo wget -O /usr/local/bin/yq https://github.com/mikefarah/yq/releases/download/3.3.0/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq
      - name: package linux
        id: package
        run : |
          export GOPATH=$(go env GOPATH)
          export EXPORTER_PATH=${{ needs.create_release.outputs.EXPORTER_PATH }}
          echo EXPORTER_PATH $EXPORTER_PATH
          echo ${{ needs.create_release.outputs }}
          source ./release.sh
          loadVariables
          packageLinux
          setStepOutput
      - name: Upload Release Asset DEB
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.UPLOAD_URL }} 
          asset_path: ./exporters/${{ steps.package.outputs.NAME }}/target/packages/deb/${{ steps.package.outputs.NAME }}_${{ steps.package.outputs.VERSION }}-1_amd64.deb
          asset_name: ${{ steps.package.outputs.NAME }}_${{ steps.package.outputs.VERSION }}-1_amd64.deb
          asset_content_type: deb package
      - name: Upload Release Asset TAR
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.UPLOAD_URL }}
          asset_path: ./exporters/${{ steps.package.outputs.NAME }}/target/packages/tarball/${{ steps.package.outputs.NAME }}_linux_${{ steps.package.outputs.VERSION }}_amd64.tar.gz
          asset_name: ${{ steps.package.outputs.NAME }}_linux_${{ steps.package.outputs.VERSION }}_amd64.tar.gz
          asset_content_type: tarball
      - name: Upload Release Asset RPM
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.UPLOAD_URL }} 
          asset_path: ./exporters/${{ steps.package.outputs.NAME }}/target/packages/rpm/${{ steps.package.outputs.NAME }}-${{ steps.package.outputs.VERSION }}-1.x86_64.rpm
          asset_name: /${{ steps.package.outputs.NAME }}-${{ steps.package.outputs.VERSION }}-1.x86_64.rpm
          asset_content_type: rpm package


###
###   Windows Packaging 
###

  push_Windows_artifacts:
    needs: [create_release]
    name: Push Linux Artifacts
    runs-on: ubuntu-latest
    if: ${{ needs.create_release.outputs.CREATE_RELEASE  == 'TRUE' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install yq
        run: |
          touch a.msi
